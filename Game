import javax.swing.*;
import java.awt.event.*;

public class Game implements ActionListener {

    Pictures pics = new Pictures();
    JButton icon, b1, b2, b3, b4, b5, b6, b7, b8, b9, pause, resume, restart;
    JLabel basisImage, currentLevel, timerLabel, timeLimit;
    Icon mover;
    //timer stuffs
    int timerSeconds = 0;
    int limit = 0;
    int limit1 = 100;
    int limit2 = 50;
    int limit3 = 40;
    int limit4 = 30;
    int limit5 = 20;
    int limit6 = 15;
    public static Timer timer;
    boolean solved = false;
    Tunog m = new Tunog();
    private Puzzle puzzle;

    Game(Puzzle puzzle) {
        System.out.println("Constructor: "+solved);
        this.puzzle = puzzle;
        currentLevel = new JLabel("Level: X"); timerLabel = new JLabel("00:00"); pause = new JButton("PAUSE"); resume = new JButton("RESUME"); restart = new JButton("RESTART");
        timeLimit = new JLabel("Time Limit: 00:00");
        b1 = new JButton(); b2 = new JButton(); b3 = new JButton();
        b4 = new JButton(); b5 = new JButton(); b6 = new JButton();
        b7 = new JButton(); b8 = new JButton(); b9 = new JButton();

        basisImage = new JLabel(); basisImage.setIcon(pics.logo);
        mover = b1.getIcon(); icon = new JButton(); icon.setIcon(b1.getIcon());

        b1.addActionListener(this); b2.addActionListener(this); b3.addActionListener(this);
        b4.addActionListener(this); b5.addActionListener(this); b6.addActionListener(this);
        b7.addActionListener(this); b8.addActionListener(this); b9.addActionListener(this);
        icon.addActionListener(this);

        pause.addActionListener(this);
        resume.addActionListener(this);
        restart.addActionListener(this);
        timer = new Timer(1000, e -> {
            timerSeconds++;
            updateTimerLabel();
        });
        timer.start();

    }

    public void updateTimerLabel(){
        int minutes = timerSeconds / 60;
        int seconds = timerSeconds % 60;
        timerLabel.setText(String.format("%02d:%02d", minutes, seconds));
        if (timerSeconds >= limit){
            timer.stop();
            puzzle.hasFailed = true;
            puzzle.checkIfGameIsSolved();
        }
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        /*
        1. Timer
            A. pause
            B. resume
            C. restart
        2. Icon Functions
        3. Button games function
        */

        //timer
        if (e.getSource() == pause){
            System.out.println("Pause button is clicked");
            timer.stop();
        } else if (e.getSource() == resume){
            if(solved){
                timer.stop();
            } else if (!solved){
                timer.start();
            }
        } else if(e.getSource() == restart){
            System.out.println("Game Restart button clicked");
            Puzzle p = new Puzzle(null);
            if (basisImage.getIcon() == pics.humss){
                p.game.Level1();
            } else if (basisImage.getIcon() == pics.stem){
                p.game.Level2();
            } else if (basisImage.getIcon() == pics.abm){
                p.game.Level3();
            } else if (basisImage.getIcon() == pics.he){
                p.game.Level4();
            } else if (basisImage.getIcon() == pics.ict){
                p.game.Level5();
            } else if (basisImage.getIcon() == pics.logo){
                p.game.Level6();
            }
        }

        //All button's functions
        //icon button's functions
        if (e.getSource() == icon) {
            Tunog.playPBMusic();
            if (icon.getIcon().equals(b9.getIcon())) {
                mover = b1.getIcon();
                icon.setIcon(mover);
            } else if (icon.getIcon().equals(b1.getIcon())){
                mover = b2.getIcon();
                icon.setIcon(mover);
            } else if (icon.getIcon().equals(b2.getIcon())) {
                mover = b3.getIcon();
                icon.setIcon(mover);
            } else if (icon.getIcon().equals(b3.getIcon())) {
                mover = b4.getIcon();
                icon.setIcon(mover);
            } else if (icon.getIcon().equals(b4.getIcon())) {
                mover = b5.getIcon();
                icon.setIcon(mover);
            } else if (icon.getIcon().equals(b5.getIcon())) {
                mover = b6.getIcon();
                icon.setIcon(mover);
            } else if (icon.getIcon().equals(b6.getIcon())) {
                mover = b7.getIcon();
                icon.setIcon(mover);
            } else if (icon.getIcon().equals(b7.getIcon())) {
                mover = b8.getIcon();
                icon.setIcon(mover);
            } else if (icon.getIcon().equals(b8.getIcon())) {
                mover = b9.getIcon();
                icon.setIcon(mover);
            }
        }

        //Puzzle Buttons
        //first button
        if (e.getSource() == b1) {
            if (b2.getIcon() == mover) {
                b2.setIcon(b1.getIcon());
                b1.setIcon(mover);
                Tunog.playPBMusic();
            } else if (b4.getIcon() == mover) {
                b4.setIcon(b1.getIcon());
                b1.setIcon(mover);
                Tunog.playPBMusic();
            }
            checkPuzzle();
        }
        //second button
        if (e.getSource() == b2) {
            if (b1.getIcon() == mover) {
                b1.setIcon(b2.getIcon());
                b2.setIcon(mover);
                Tunog.playPBMusic();
            } else if (b5.getIcon() == mover) {
                b5.setIcon(b2.getIcon());
                b2.setIcon(mover);
                Tunog.playPBMusic();
            } else if (b3.getIcon() == mover) {
                b3.setIcon(b2.getIcon());
                b2.setIcon(mover);
                Tunog.playPBMusic();
            }
            checkPuzzle();
        }
        //third button
        if (e.getSource() == b3) {
            if (b2.getIcon() == mover) {
                b2.setIcon(b3.getIcon());
                b3.setIcon(mover);
                Tunog.playPBMusic();
            } else if (b6.getIcon() == mover) {
                b6.setIcon(b3.getIcon());
                b3.setIcon(mover);
                Tunog.playPBMusic();
            }
            checkPuzzle();
        }
        //fourth button
        if (e.getSource() == b4) {
            if (b1.getIcon() == mover) {
                b1.setIcon(b4.getIcon());
                b4.setIcon(mover);
                Tunog.playPBMusic();
            } else if (b5.getIcon() == mover) {
                b5.setIcon(b4.getIcon());
                b4.setIcon(mover);
                Tunog.playPBMusic();
            } else if (b7.getIcon() == mover) {
                b7.setIcon(b4.getIcon());
                b4.setIcon(mover);
                Tunog.playPBMusic();
            }
            checkPuzzle();
        }
        //fifth button
        if (e.getSource() == b5) {
            if (b2.getIcon() == mover) {
                b2.setIcon(b5.getIcon());
                b5.setIcon(mover);
                Tunog.playPBMusic();
            } else if (b4.getIcon() == mover) {
                b4.setIcon(b5.getIcon());
                b5.setIcon(mover);
                Tunog.playPBMusic();
            } else if (b6.getIcon() == mover) {
                b6.setIcon(b5.getIcon());
                b5.setIcon(mover);
                Tunog.playPBMusic();
            } else if (b8.getIcon() == mover) {
                b8.setIcon(b5.getIcon());
                b5.setIcon(mover);
                Tunog.playPBMusic();
            }
            checkPuzzle();
        }
        //sixth button
        if (e.getSource() == b6) {
            if (b3.getIcon() == mover) {
                b3.setIcon(b6.getIcon());
                b6.setIcon(mover);
                Tunog.playPBMusic();
            } else if (b5.getIcon() == mover) {
                b5.setIcon(b6.getIcon());
                b6.setIcon(mover);
                Tunog.playPBMusic();
            } else if (b9.getIcon() == mover) {
                b9.setIcon(b6.getIcon());
                b6.setIcon(mover);
                Tunog.playPBMusic();
            }
            checkPuzzle();
        }
        //seventh button
        if (e.getSource() == b7) {
            if (b4.getIcon() == mover) {
                b4.setIcon(b7.getIcon());
                b7.setIcon(mover);
                Tunog.playPBMusic();
            } else if (b8.getIcon() == mover) {
                b8.setIcon(b7.getIcon());
                b7.setIcon(mover);
                Tunog.playPBMusic();
            }
            checkPuzzle();
        }
        //eighth button
        if (e.getSource() == b8) {
            if (b7.getIcon() == mover) {
                b7.setIcon(b8.getIcon());
                b8.setIcon(mover);
                Tunog.playPBMusic();
            } else if (b5.getIcon() == mover) {
                b5.setIcon(b8.getIcon());
                b8.setIcon(mover);
                Tunog.playPBMusic();
            } else if (b9.getIcon() == mover) {
                b9.setIcon(b8.getIcon());
                b8.setIcon(mover);
                Tunog.playPBMusic();
            }
            checkPuzzle();
        }
        //ninth button
        if (e.getSource() == b9) {
            if (b6.getIcon() == mover) {
                b6.setIcon(b9.getIcon());
                b9.setIcon(mover);
                Tunog.playPBMusic();
            } else if (b8.getIcon() == mover) {
                b8.setIcon(b9.getIcon());
                b9.setIcon(mover);
                Tunog.playPBMusic();
            }
            checkPuzzle();
        }

    }

    public void checkPuzzle() {
        if ((b1.getIcon() == pics.humss1) && (b2.getIcon() == pics.humss2) && (b3.getIcon() == pics.humss3)
                && (b4.getIcon() == pics.humss4) && (b5.getIcon() == pics.humss5) && (b6.getIcon() == pics.humss6)
                && (b7.getIcon() == pics.humss7) && (b8.getIcon() == pics.humss8) && (b9.getIcon() == pics.humss9)){
            //level 1
            System.out.println("Puzzle Solved");
            solved = true;
            System.out.println("checkPuzzle: "+solved);
            timer.stop();
            puzzle.checkIfGameIsSolved();
        } else if ((b1.getIcon() == pics.stem1) && (b2.getIcon() == pics.stem2) && (b3.getIcon() == pics.stem3)
                && (b4.getIcon() == pics.stem4) && (b5.getIcon() == pics.stem5) && (b6.getIcon() == pics.stem6)
                && (b7.getIcon() == pics.stem7) && (b8.getIcon() == pics.stem8) && (b9.getIcon() == pics.stem9)){
            //paris
            System.out.println("Puzzle Solved");
            solved = true;
            System.out.println(solved);
            timer.stop();
            puzzle.checkIfGameIsSolved();
        } else if ((b1.getIcon() == pics.abm1) && (b2.getIcon() == pics.abm2) && (b3.getIcon() == pics.abm3)
                && (b4.getIcon() == pics.abm4) && (b5.getIcon() == pics.abm5) && (b6.getIcon() == pics.abm6)
                && (b7.getIcon() == pics.abm7) && (b8.getIcon() == pics.abm8) && (b9.getIcon() == pics.abm9)) {
            //taj mahal
            System.out.println("Puzzle Solved");
            solved = true;
            System.out.println(solved);
            timer.stop();
            puzzle.checkIfGameIsSolved();
        } else if ((b1.getIcon() == pics.he1) && (b2.getIcon() == pics.he2) && (b3.getIcon() == pics.he3)
                && (b4.getIcon() == pics.he4) && (b5.getIcon() == pics.he5) && (b6.getIcon() == pics.he6)
                && (b7.getIcon() == pics.he7) && (b8.getIcon() == pics.he8) && (b9.getIcon() == pics.he9)) {
            //fuji
            System.out.println("Puzzle Solved");
            solved = true;
            System.out.println(solved);
            timer.stop();
            puzzle.checkIfGameIsSolved();
        } else if ((b1.getIcon() == pics.ict1) && (b2.getIcon() == pics.ict2) && (b3.getIcon() == pics.ict3)
                && (b4.getIcon() == pics.ict4) && (b5.getIcon() == pics.ict5) && (b6.getIcon() == pics.ict6)
                && (b7.getIcon() == pics.ict7) && (b8.getIcon() == pics.ict8) && (b9.getIcon() == pics.ict9)) {
            System.out.println("Puzzle Solved");
            solved = true;
            System.out.println(solved);
            timer.stop();
            puzzle.checkIfGameIsSolved();
        } else if ((b1.getIcon() == pics.l1) && (b2.getIcon() == pics.l2) && (b3.getIcon() == pics.l3)
                && (b4.getIcon() == pics.l4) && (b5.getIcon() == pics.l5) && (b6.getIcon() == pics.l6)
                && (b7.getIcon() == pics.l7) && (b8.getIcon() == pics.l8) && (b9.getIcon() == pics.l9)) {
            System.out.println("Puzzle Solved");
            solved = true;
            System.out.println(solved);
            timer.stop();
            puzzle.ifGameWin();
        }
    }

    public void Level1() {
        limit = limit1;
        currentLevel.setText("Level: 1");
        timeLimit.setText("Time Limit: 01:00");
        b1.setIcon(pics.humss3); b2.setIcon(pics.humss4); b3.setIcon(pics.humss1);
        b4.setIcon(pics.humss8); b5.setIcon(pics.humss2); b6.setIcon(pics.humss7);
        b7.setIcon(pics.humss6); b8.setIcon(pics.humss9); b9.setIcon(pics.humss5);
        basisImage.setIcon(pics.humss);
        mover = b1.getIcon();
        icon.setIcon(b1.getIcon());
    }

    public void Level2() {
        limit = limit2;
        currentLevel.setText("Level: 2");
        timeLimit.setText("Time Limit: 00:50");
        b1.setIcon(pics.stem4); b2.setIcon(pics.stem2); b3.setIcon(pics.stem6);
        b4.setIcon(pics.stem9); b5.setIcon(pics.stem1); b6.setIcon(pics.stem5);
        b7.setIcon(pics.stem3); b8.setIcon(pics.stem8); b9.setIcon(pics.stem7);
        basisImage.setIcon(pics.stem);
        mover = b1.getIcon();
        icon.setIcon(b1.getIcon());
    }

    public void Level3() {
        limit = limit3;
        currentLevel.setText("Level: 3");
        timeLimit.setText("Time Limit: 00:40");
        b1.setIcon(pics.abm2); b2.setIcon(pics.abm1); b3.setIcon(pics.abm6);
        b4.setIcon(pics.abm9); b5.setIcon(pics.abm4); b6.setIcon(pics.abm5);
        b7.setIcon(pics.abm8); b8.setIcon(pics.abm3); b9.setIcon(pics.abm7);
        basisImage.setIcon(pics.abm);
        mover = b1.getIcon();
        icon.setIcon(b1.getIcon());
    }

    public void Level4() {
        limit = limit4;
        currentLevel.setText("Level: 4");
        timeLimit.setText("Time Limit: 00:30");
        b1.setIcon(pics.he9); b2.setIcon(pics.he5); b3.setIcon(pics.he7);
        b4.setIcon(pics.he1); b5.setIcon(pics.he3); b6.setIcon(pics.he8);
        b7.setIcon(pics.he6); b8.setIcon(pics.he2); b9.setIcon(pics.he4);
        basisImage.setIcon(pics.he);
        mover = b1.getIcon();
        icon.setIcon(b1.getIcon());
    }
    public void Level5() {
        limit = limit5;
        currentLevel.setText("Level: 5");
        timeLimit.setText("Time Limit: 00:20");
        b1.setIcon(pics.ict4); b2.setIcon(pics.ict7); b3.setIcon(pics.ict5);
        b4.setIcon(pics.ict2); b5.setIcon(pics.ict3); b6.setIcon(pics.ict9);
        b7.setIcon(pics.ict8); b8.setIcon(pics.ict6); b9.setIcon(pics.ict1);
        basisImage.setIcon(pics.ict);
        mover = b1.getIcon();
        icon.setIcon(b1.getIcon());
    }

    public void Level6() {
        limit = limit6;
        currentLevel.setText("<html><i>SECRET LEVEL...</i></html>");
        timeLimit.setText("Time Limit: 00:10");
        b1.setIcon(pics.l4); b2.setIcon(pics.l7); b3.setIcon(pics.l5);
        b4.setIcon(pics.l2); b5.setIcon(pics.l3); b6.setIcon(pics.l9);
        b7.setIcon(pics.l8); b8.setIcon(pics.l6); b9.setIcon(pics.l1);
        basisImage.setIcon(pics.logo);
        mover = b1.getIcon();
        icon.setIcon(b1.getIcon());
    }
}
